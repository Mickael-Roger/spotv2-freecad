# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gyro.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\ngyro.proto\x12\x06spotv2\"\xa0\x04\n\x04Gyro\x12\x0f\n\x07\x41\x63\x63\x65l_x\x18\x0b \x01(\x02\x12\x0f\n\x07\x41\x63\x63\x65l_y\x18\x0c \x01(\x02\x12\x0f\n\x07\x41\x63\x63\x65l_z\x18\r \x01(\x02\x12\x0e\n\x06Gyro_x\x18\x15 \x01(\x02\x12\x0e\n\x06Gyro_y\x18\x16 \x01(\x02\x12\x0e\n\x06Gyro_z\x18\x17 \x01(\x02\x12\r\n\x05Mag_x\x18\x1f \x01(\x02\x12\r\n\x05Mag_y\x18  \x01(\x02\x12\r\n\x05Mag_z\x18! \x01(\x02\x12\x0e\n\x06Grav_x\x18) \x01(\x02\x12\x0e\n\x06Grav_y\x18* \x01(\x02\x12\x0e\n\x06Grav_z\x18+ \x01(\x02\x12\x15\n\rLinearaccel_x\x18\x33 \x01(\x02\x12\x15\n\rLinearaccel_y\x18\x34 \x01(\x02\x12\x15\n\rLinearaccel_z\x18\x35 \x01(\x02\x12\x0f\n\x07Quat6_w\x18= \x01(\x02\x12\x0f\n\x07Quat6_x\x18> \x01(\x02\x12\x0f\n\x07Quat6_y\x18? \x01(\x02\x12\x0f\n\x07Quat6_z\x18@ \x01(\x02\x12\x0f\n\x07Quat9_w\x18G \x01(\x02\x12\x0f\n\x07Quat9_x\x18H \x01(\x02\x12\x0f\n\x07Quat9_y\x18I \x01(\x02\x12\x0f\n\x07Quat9_z\x18J \x01(\x02\x12\x13\n\x0b\x45uler6_roll\x18Q \x01(\x02\x12\x14\n\x0c\x45uler6_pitch\x18R \x01(\x02\x12\x12\n\nEuler6_yaw\x18S \x01(\x02\x12\x13\n\x0b\x45uler9_roll\x18[ \x01(\x02\x12\x14\n\x0c\x45uler9_pitch\x18\\ \x01(\x02\x12\x12\n\nEuler9_yaw\x18] \x01(\x02\x12\r\n\x05steps\x18\x64 \x01(\x04\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'gyro_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GYRO._serialized_start=23
  _GYRO._serialized_end=567
# @@protoc_insertion_point(module_scope)
