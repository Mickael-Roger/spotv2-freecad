/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: motion.proto */

#ifndef PROTOBUF_C_motion_2eproto__INCLUDED
#define PROTOBUF_C_motion_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Spotv2__Servo Spotv2__Servo;
typedef struct Spotv2__Motion Spotv2__Motion;
typedef struct Spotv2__Command Spotv2__Command;
typedef struct Spotv2__CommandServo Spotv2__CommandServo;
typedef struct Spotv2__MoveServo Spotv2__MoveServo;
typedef struct Spotv2__StopServo Spotv2__StopServo;
typedef struct Spotv2__StartServo Spotv2__StartServo;


/* --- enums --- */

typedef enum _Spotv2__ServoStatus {
  SPOTV2__SERVO_STATUS__STARTED = 0,
  SPOTV2__SERVO_STATUS__STOPPED = 1,
  SPOTV2__SERVO_STATUS__MOVING = 2,
  SPOTV2__SERVO_STATUS__ERROR = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTV2__SERVO_STATUS)
} Spotv2__ServoStatus;

/* --- messages --- */

struct  Spotv2__Servo
{
  ProtobufCMessage base;
  int32_t position;
  int32_t speed;
  int32_t resistance;
  Spotv2__ServoStatus status;
  int32_t temp;
  int32_t voltage;
  int32_t current;
};
#define SPOTV2__SERVO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__servo__descriptor) \
    , 0, 0, 0, SPOTV2__SERVO_STATUS__STARTED, 0, 0, 0 }


struct  Spotv2__Motion
{
  ProtobufCMessage base;
  Spotv2__Servo *foot_left_front;
  Spotv2__Servo *foot_right_front;
  Spotv2__Servo *foot_left_back;
  Spotv2__Servo *foot_right_back;
  Spotv2__Servo *leg_left_front;
  Spotv2__Servo *leg_right_front;
  Spotv2__Servo *leg_left_back;
  Spotv2__Servo *leg_right_back;
  Spotv2__Servo *shoulder_left_front;
  Spotv2__Servo *shoulder_right_front;
  Spotv2__Servo *shoulder_left_back;
  Spotv2__Servo *shoulder_right_back;
};
#define SPOTV2__MOTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__motion__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


struct  Spotv2__Command
{
  ProtobufCMessage base;
  size_t n_commands;
  Spotv2__CommandServo **commands;
};
#define SPOTV2__COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__command__descriptor) \
    , 0,NULL }


typedef enum {
  SPOTV2__COMMAND_SERVO__COMMAND__NOT_SET = 0,
  SPOTV2__COMMAND_SERVO__COMMAND_MOVE_SERVO = 1,
  SPOTV2__COMMAND_SERVO__COMMAND_STOP_SERVO = 2,
  SPOTV2__COMMAND_SERVO__COMMAND_START_SERVO = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SPOTV2__COMMAND_SERVO__COMMAND__CASE)
} Spotv2__CommandServo__CommandCase;

struct  Spotv2__CommandServo
{
  ProtobufCMessage base;
  Spotv2__CommandServo__CommandCase command_case;
  union {
    Spotv2__MoveServo *move_servo;
    Spotv2__StopServo *stop_servo;
    Spotv2__StartServo *start_servo;
  };
};
#define SPOTV2__COMMAND_SERVO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__command_servo__descriptor) \
    , SPOTV2__COMMAND_SERVO__COMMAND__NOT_SET, {0} }


struct  Spotv2__MoveServo
{
  ProtobufCMessage base;
  int32_t servo_id;
  int32_t position;
  int32_t acceleration;
};
#define SPOTV2__MOVE_SERVO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__move_servo__descriptor) \
    , 0, 0, 0 }


struct  Spotv2__StopServo
{
  ProtobufCMessage base;
  int32_t servo_id;
};
#define SPOTV2__STOP_SERVO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__stop_servo__descriptor) \
    , 0 }


struct  Spotv2__StartServo
{
  ProtobufCMessage base;
  int32_t servo_id;
};
#define SPOTV2__START_SERVO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&spotv2__start_servo__descriptor) \
    , 0 }


/* Spotv2__Servo methods */
void   spotv2__servo__init
                     (Spotv2__Servo         *message);
size_t spotv2__servo__get_packed_size
                     (const Spotv2__Servo   *message);
size_t spotv2__servo__pack
                     (const Spotv2__Servo   *message,
                      uint8_t             *out);
size_t spotv2__servo__pack_to_buffer
                     (const Spotv2__Servo   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__Servo *
       spotv2__servo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__servo__free_unpacked
                     (Spotv2__Servo *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__Motion methods */
void   spotv2__motion__init
                     (Spotv2__Motion         *message);
size_t spotv2__motion__get_packed_size
                     (const Spotv2__Motion   *message);
size_t spotv2__motion__pack
                     (const Spotv2__Motion   *message,
                      uint8_t             *out);
size_t spotv2__motion__pack_to_buffer
                     (const Spotv2__Motion   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__Motion *
       spotv2__motion__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__motion__free_unpacked
                     (Spotv2__Motion *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__Command methods */
void   spotv2__command__init
                     (Spotv2__Command         *message);
size_t spotv2__command__get_packed_size
                     (const Spotv2__Command   *message);
size_t spotv2__command__pack
                     (const Spotv2__Command   *message,
                      uint8_t             *out);
size_t spotv2__command__pack_to_buffer
                     (const Spotv2__Command   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__Command *
       spotv2__command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__command__free_unpacked
                     (Spotv2__Command *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__CommandServo methods */
void   spotv2__command_servo__init
                     (Spotv2__CommandServo         *message);
size_t spotv2__command_servo__get_packed_size
                     (const Spotv2__CommandServo   *message);
size_t spotv2__command_servo__pack
                     (const Spotv2__CommandServo   *message,
                      uint8_t             *out);
size_t spotv2__command_servo__pack_to_buffer
                     (const Spotv2__CommandServo   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__CommandServo *
       spotv2__command_servo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__command_servo__free_unpacked
                     (Spotv2__CommandServo *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__MoveServo methods */
void   spotv2__move_servo__init
                     (Spotv2__MoveServo         *message);
size_t spotv2__move_servo__get_packed_size
                     (const Spotv2__MoveServo   *message);
size_t spotv2__move_servo__pack
                     (const Spotv2__MoveServo   *message,
                      uint8_t             *out);
size_t spotv2__move_servo__pack_to_buffer
                     (const Spotv2__MoveServo   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__MoveServo *
       spotv2__move_servo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__move_servo__free_unpacked
                     (Spotv2__MoveServo *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__StopServo methods */
void   spotv2__stop_servo__init
                     (Spotv2__StopServo         *message);
size_t spotv2__stop_servo__get_packed_size
                     (const Spotv2__StopServo   *message);
size_t spotv2__stop_servo__pack
                     (const Spotv2__StopServo   *message,
                      uint8_t             *out);
size_t spotv2__stop_servo__pack_to_buffer
                     (const Spotv2__StopServo   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__StopServo *
       spotv2__stop_servo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__stop_servo__free_unpacked
                     (Spotv2__StopServo *message,
                      ProtobufCAllocator *allocator);
/* Spotv2__StartServo methods */
void   spotv2__start_servo__init
                     (Spotv2__StartServo         *message);
size_t spotv2__start_servo__get_packed_size
                     (const Spotv2__StartServo   *message);
size_t spotv2__start_servo__pack
                     (const Spotv2__StartServo   *message,
                      uint8_t             *out);
size_t spotv2__start_servo__pack_to_buffer
                     (const Spotv2__StartServo   *message,
                      ProtobufCBuffer     *buffer);
Spotv2__StartServo *
       spotv2__start_servo__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   spotv2__start_servo__free_unpacked
                     (Spotv2__StartServo *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Spotv2__Servo_Closure)
                 (const Spotv2__Servo *message,
                  void *closure_data);
typedef void (*Spotv2__Motion_Closure)
                 (const Spotv2__Motion *message,
                  void *closure_data);
typedef void (*Spotv2__Command_Closure)
                 (const Spotv2__Command *message,
                  void *closure_data);
typedef void (*Spotv2__CommandServo_Closure)
                 (const Spotv2__CommandServo *message,
                  void *closure_data);
typedef void (*Spotv2__MoveServo_Closure)
                 (const Spotv2__MoveServo *message,
                  void *closure_data);
typedef void (*Spotv2__StopServo_Closure)
                 (const Spotv2__StopServo *message,
                  void *closure_data);
typedef void (*Spotv2__StartServo_Closure)
                 (const Spotv2__StartServo *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    spotv2__servo_status__descriptor;
extern const ProtobufCMessageDescriptor spotv2__servo__descriptor;
extern const ProtobufCMessageDescriptor spotv2__motion__descriptor;
extern const ProtobufCMessageDescriptor spotv2__command__descriptor;
extern const ProtobufCMessageDescriptor spotv2__command_servo__descriptor;
extern const ProtobufCMessageDescriptor spotv2__move_servo__descriptor;
extern const ProtobufCMessageDescriptor spotv2__stop_servo__descriptor;
extern const ProtobufCMessageDescriptor spotv2__start_servo__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_motion_2eproto__INCLUDED */
